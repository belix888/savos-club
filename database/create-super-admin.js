const db = require('./init');

console.log('üîê –°–æ–∑–¥–∞–Ω–∏–µ —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞...');

// –î–∞–Ω–Ω—ã–µ —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
const superAdminData = {
    telegram_id: 123456789, // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à Telegram ID
    username: 'superadmin',
    first_name: '–°—É–ø–µ—Ä',
    last_name: '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä',
    is_resident: 1,
    is_waiter: 0,
    is_admin: 1,
    is_super_admin: 1
};

db.serialize(() => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω
    db.get('SELECT * FROM users WHERE is_super_admin = 1', (err, row) => {
        if (err) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:', err);
            return;
        }

        if (row) {
            console.log('‚úÖ –°—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç:');
            console.log(`   ID: ${row.id}`);
            console.log(`   –ò–º—è: ${row.first_name} ${row.last_name}`);
            console.log(`   Username: @${row.username}`);
            console.log(`   Telegram ID: ${row.telegram_id}`);
        } else {
            // –°–æ–∑–¥–∞–µ–º —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
            db.run(
                'INSERT INTO users (telegram_id, username, first_name, last_name, is_resident, is_waiter, is_admin, is_super_admin) VALUES (?, ?, ?, ?, ?, ?, ?, ?)',
                [superAdminData.telegram_id, superAdminData.username, superAdminData.first_name, superAdminData.last_name, superAdminData.is_resident, superAdminData.is_waiter, superAdminData.is_admin, superAdminData.is_super_admin],
                function(err) {
                    if (err) {
                        console.error('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:', err);
                    } else {
                        console.log('‚úÖ –°—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!');
                        console.log(`   ID: ${this.lastID}`);
                        console.log(`   –ò–º—è: ${superAdminData.first_name} ${superAdminData.last_name}`);
                        console.log(`   Username: @${superAdminData.username}`);
                        console.log(`   Telegram ID: ${superAdminData.telegram_id}`);
                        console.log('\nüìù –í–ê–ñ–ù–û:');
                        console.log('1. –ó–∞–º–µ–Ω–∏—Ç–µ telegram_id –≤ —ç—Ç–æ–º —Ñ–∞–π–ª–µ –Ω–∞ –≤–∞—à —Ä–µ–∞–ª—å–Ω—ã–π Telegram ID');
                        console.log('2. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö');
                        console.log('3. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∫–µ');
                    }
                }
            );
        }
    });

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ—Ö –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
    setTimeout(() => {
        console.log('\nüë• –í—Å–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –≤ —Å–∏—Å—Ç–µ–º–µ:');
        db.all('SELECT id, first_name, last_name, username, is_admin, is_super_admin FROM users WHERE is_admin = 1 OR is_super_admin = 1', (err, rows) => {
            if (err) {
                console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤:', err);
            } else {
                rows.forEach(admin => {
                    const role = admin.is_super_admin ? '–°—É–ø–µ—Ä-–∞–¥–º–∏–Ω' : '–ê–¥–º–∏–Ω';
                    console.log(`   ${role}: ${admin.first_name} ${admin.last_name} (@${admin.username}) - ID: ${admin.id}`);
                });
            }
            
            db.close();
        });
    }, 1000);
});
