import os
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, WebAppInfo
from telegram.ext import Application, CommandHandler, ContextTypes


MINI_APP_URL = os.getenv("MINI_APP_URL", "https://savos-club-two.vercel.app/mini-app")
# –¢–æ–∫–µ–Ω –±–æ—Ç–∞ –∑–∞—Ö–∞—Ä–¥–∫–æ–∂–µ–Ω –ø–æ –∑–∞–ø—Ä–æ—Å—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
BOT_TOKEN = "8498015879:AAEemLqn9Hv9NWC_hcqvx4goKlVwNCFsT_c"


async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [[InlineKeyboardButton("üì± –û—Ç–∫—Ä—ã—Ç—å –º–∏–Ω–∏‚Äë–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ", web_app=WebAppInfo(url=MINI_APP_URL))]]
    await update.message.reply_text(
        "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ SavosBot Club!\n\n–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –º–∏–Ω–∏‚Äë–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ.",
        reply_markup=InlineKeyboardMarkup(keyboard),
    )


def main():
    token = BOT_TOKEN or os.getenv("TELEGRAM_BOT_TOKEN")
    if not token:
        raise SystemExit("Set BOT_TOKEN or TELEGRAM_BOT_TOKEN env var with your Telegram bot token")

    app = Application.builder().token(token).build()
    app.add_handler(CommandHandler("start", start))

    # –ù–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π —Å–Ω–∏–º–µ–º –≤–æ–∑–º–æ–∂–Ω—ã–π webhook –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º polling
    app.run_polling(drop_pending_updates=True)


if __name__ == "__main__":
    main()


