#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ JSON –≤ SQLite –Ω–∞ —Å–∞–π—Ç–µ
"""

import os
import json
import requests
import sys

def main():
    """–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
    
    # –ü—É—Ç—å –∫ JSON —Ñ–∞–π–ª—É
    users_file = os.path.join('data', 'users.json')
    
    if not os.path.exists(users_file):
        print("‚ùå –§–∞–π–ª users.json –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        sys.exit(1)
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    with open(users_file, 'r') as f:
        users = json.load(f)
    
    if not users:
        print("üì≠ –ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏")
        sys.exit(0)
    
    print(f"üìä –ù–∞–π–¥–µ–Ω–æ {len(users)} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
    website_url = os.getenv('WEBSITE_URL', 'https://savos-club-two.vercel.app')
    api_key = os.getenv('API_KEY', 'savosbot2024')
    
    # –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    success_count = 0
    error_count = 0
    
    for user in users:
        try:
            print(f"\nüì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.get('id')} ({user.get('first_name')})...")
            
            response = requests.post(
                f"{website_url}/api/users",
                json={
                    **user,
                    'source': 'telegram_bot_sync'
                },
                headers={
                    'Authorization': f'Bearer {api_key}',
                    'Content-Type': 'application/json'
                },
                timeout=10
            )
            
            if response.status_code == 200:
                result = response.json()
                print(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.get('id')} —É—Å–ø–µ—à–Ω–æ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω (internal_id: {result.get('internal_id')})")
                success_count += 1
            else:
                print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ {user.get('id')}: {response.status_code}")
                error_count += 1
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ {user.get('id')}: {e}")
            error_count += 1
    
    print(f"\n{'='*50}")
    print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ: {success_count}")
    print(f"‚ùå –û—à–∏–±–æ–∫: {error_count}")
    print(f"{'='*50}")

if __name__ == '__main__':
    main()

